{"version":3,"sources":["components/EatItem/EatItem.js","components/Select/Select.js","helpers.js","components/Note/Note.js","components/Search/Search.js","components/App/App.js","index.js"],"names":["EatItem","date","time","eatType","kcal","id","isHide","removeNote","itemClass","className","style","width","type","onClick","_","Select","setEatType","optionText","onChange","e","el","target","options","selectedIndex","text","map","Note","addNote","useState","setKcal","today","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","dateToday","setDate","fontWeight","value","min","max","step","getHours","getMinutes","Math","random","toString","substr","Search","searchNotes","autoomplete","name","placeholder","App","notes","setNotes","filter","newNote","toLowerCase","startsWith","length","every","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a5f5f00.chunk.js","sourcesContent":["import React from 'react'\r\nimport PT from 'prop-types'\r\n\r\nexport default function EatItem({date, time, eatType, kcal, id, isHide = false, removeNote}) {\r\n  let itemClass = `justify-content-between mt-3`\r\n  return <div className={isHide === true ? `d-none ${itemClass}` : `d-flex ${itemClass}`} style={{width:'45%'}}>\r\n    <div>\r\n      <small className='text-muted'>{`${date} ${time}`}</small><br />{`${eatType} – ${kcal} kcal`}\r\n    </div>\r\n    <div>\r\n      <button type='button' className='btn btn-secondary ml-2' onClick={_ => removeNote(id)}>×</button>\r\n    </div>\r\n</div>\r\n}\r\n\r\nEatItem.propTypes = {\r\n  date: PT.string.isRequired,\r\n  time: PT.string.isRequired,\r\n  eatType: PT.string.isRequired,\r\n  kcal: PT.number.isRequired,\r\n  id: PT.string.isRequired,\r\n  isHide: PT.bool, \r\n  removeNote: PT.func.isRequired\r\n}","import React from 'react'\r\nimport {getOptionText} from '../../helpers'\r\nimport PT from 'prop-types'\r\n\r\nexport default function Select({setEatType, optionText}) {\r\n  return <select className='form-control mr-2' \r\n  onChange={e => {setEatType( getOptionText(e.target) )}}\r\n  >\r\n    { optionText.map(el => <option>{el}</option>) }\r\n  </select>\r\n}\r\n\r\nSelect.propTypes = {\r\n  setEatType: PT.func.isRequired,\r\n  optionText: PT.array.isRequired\r\n}","export function dateToday() {\r\n  const today = new Date()\r\n  const day = String(today.getDate()).padStart(2, '0')\r\n  const month = String(today.getMonth() + 1).padStart(2, '0')\r\n  const year = today.getFullYear()\r\n  return `${year}-${month}-${day}`\r\n}\r\n\r\nexport function getOptionText(el) {\r\n  return el.options[el.selectedIndex].text\r\n}\r\n\r\nexport function getUniqueID(){\r\n  return '_' + Math.random().toString(36).substr(2, 9)\r\n}","import React, {useState} from 'react'\r\nimport {dateToday, getUniqueID} from '../../helpers'\r\nimport Select from '../Select/Select'\r\nimport PT from 'prop-types'\r\nimport './Note.css'\r\n\r\nexport default function Note({addNote}){\r\n  const [kcal, setKcal] = useState(500)\r\n  const [date, setDate] = useState( dateToday() )\r\n  const [eatType, setEatType] = useState('Breakfast')\r\n\r\n  function addItem() {\r\n    const time = `${new Date().getHours()}:${new Date().getMinutes()}`\r\n    addNote({date, time, eatType, kcal, id: getUniqueID()})\r\n  }\r\n\r\n  return <div className='note'>\r\n    <div style={{fontWeight:'500'}}>New Note</div>\r\n\r\n    <div className='note-content'>\r\n      <Select \r\n      setEatType={setEatType}\r\n      optionText = {['Breakfast', 'Lunch', 'Dinner']}\r\n      />\r\n\r\n      <input type='date' className='form-control mr-2' \r\n      value={date}\r\n      onChange={e => setDate(e.target.value)}\r\n      />\r\n\r\n      <div className='input-group mr-2'>\r\n        <input type='number' min='100' max='2000' step='100' className='form-control' \r\n        value={kcal} \r\n        onChange={e => setKcal(e.target.value)}\r\n        />\r\n        <div className='input-group-append'>\r\n          <div className='input-group-text'>kcal</div>\r\n        </div>\r\n      </div> \r\n\r\n      <button className='btn btn-primary' onClick={addItem}>Add</button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nNote.propTypes = {\r\n  addNote: PT.func.isRequired\r\n}","import React from 'react'\r\nimport PT from 'prop-types'\r\nimport './Search.css'\r\n\r\nexport default function Search({searchNotes}){\r\n  return <div className='search-block'>\r\n    <input \r\n    autoomplete='off' \r\n    className='form-control' \r\n    name='text' \r\n    placeholder='Search...' \r\n    onChange={e => searchNotes(e.target.value)}\r\n    />\r\n  </div>\r\n}\r\n\r\nSearch.propTypes = {\r\n  searchNotes: PT.func.isRequired\r\n}","import React, {useState} from 'react'\nimport EatItem from '../EatItem/EatItem'\nimport Note from '../Note/Note'\nimport Search from '../Search/Search'\nimport './App.css'\n\nfunction App() {\n  const [notes, setNotes] = useState([])\n\n  function addNote(newNote){\n    setNotes([...notes, newNote])\n  }\n\n  function removeNote(id){\n    setNotes(notes.filter(el => el.id !== id))\n  }\n\n  function searchNotes(text){\n    setNotes(notes.map(el =>{ \n      el.eatType.toLowerCase().startsWith(text.toLowerCase()) ? el.isHide = false : el.isHide = true\n      return el\n    })\n    )\n  }\n\n  return <div className='wrap'>\n    <div className='content p-4'>\n      <h1>Food diary</h1>\n      <Note addNote={addNote}/>\n      <Search searchNotes={searchNotes}/>\n      <div  className='eat-list'>\n        {notes.length === 0 || notes.every(el => el.isHide === true) ? <div className='note-empty'>Notes list is empty.</div> :\n         notes.map(el => {\n            return <EatItem \n            date={el.date} \n            time={el.time} \n            eatType={el.eatType} \n            kcal={el.kcal}\n            id={el.id}\n            isHide={el.isHide}\n            key={el.id}\n            removeNote={removeNote}\n            />\n          })\n        }\n      </div>\n    </div>\n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}